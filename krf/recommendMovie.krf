(in-microtheory Movie-Recommender)

;;; recommendMovieName

(<== (recommendMovieName ?inputMovieName ?recommendedMovieName)
  (movieTitleString ?inputMovie ?inputMovieName)
  (movieTitleString ?recommendedMovie ?recommendedMovieName)
  (different ?inputMovie ?recommendedMovie)
  (movieAdvisoryRating ?inputMovie ?rating)
  (recommendMovie ?inputMovie ?recommendedMovie ?rating)
)

(<== (recommendMovieName ?inputMovieName ?recommendedMovieName ?rating)
  (movieTitleString ?inputMovie ?inputMovieName)
  (movieTitleString ?recommendedMovie ?recommendedMovieName)
  (different ?inputMovie ?recommendedMovie)
  (recommendMovie ?inputMovie ?recommendedMovie ?rating)
)

;;; recommendMovie

(<== (recommendMovie ?inputMovie ?recommendedMovie ?rating)
  (fanFavorite ?inputMovie ?recommendedMovie ?rating)
)

(<== (recommendMovie ?inputMovie ?recommendedMovie ?rating)
  (criticFavorite ?inputMovie ?recommendedMovie ?rating)
)

;;; recommendation types

(<== (criticFavorite ?inputMovie ?criticMovie ?rating)
  (similarMovie ?inputMovie ?criticMovie ?rating)
  (movieMetascore ?criticMovie ?score)
  (greaterThan ?score 85)
)

(<== (fanFavorite ?movie ?movieToFind ?rating)
  (similarMovie ?movie ?movieToFind ?rating)

  (movieMetascore ?movieToFind ?score)
  (greaterThan 65 ?score)

  (movieImdbRatingCount ?movieToFind ?numRev)
  (greaterThan ?numRev 1000)
)

;;; academyFavorite

(<== (academyFavorite ?movie1 ?movie2) 
 (movieAdvisoryRating ?movie1 ?rating) 
 (similarMovie ?movie1 ?movie2 ?rating)
 (movieAwardWon ?movie2) 
 (movieMetascore ?movie2 ?score)
 (greaterThan ?score 80)
)


;;; oldies

(<== (oldies ?movie1 ?movie2)
 (sameAdvisoryRating ?movie1 ?movie2) 
 (sameDirectorOrGenre ?movie1 ?movie2) 
 (movieDecade ?movie2 ?decade)
 (lessThan ?decade 1980)
)


;;; hidden gems - high average rating - low number of reviews
;;; presets: 70% minimum score, 10,000 max reviews

(<== (hiddenGems ?movie1 ?movie2 ?rating)
 (similarMovie ?movie1 ?movie2 ?rating)
 (movieMetascore ?movie2 ?score)
 (lessThan 70 ?score)
 (movieImdbRatingCount ?movie2 ?numRevs)
 (greaterThan 10000 ?numRevs)
)

;;; similar movie different rating

(<== (similarMovieNewRating ?movie1 ?movie2)
 (movieAdvisoryRating ?movie1 ?rating)
 (similarMovie ?movie1 ?movie2 ?rating2)
 (different ?rating ?rating2)
)


;;; foreign language movie

(<== (foreignLanguageMovie ?movie1 ?movie2)
 (movieAdvisoryRating ?movie1 ?rating)
 (similarMovie ?movie1 ?movie2 ?rating)
 (movieLanguage ?movie1 ?language1)
 (movieLanguage ?movie2 ?language2)
 (different ?language1 ?language2)
)

;;; similarMovie

(<== (similarMovie ?inputMovie ?outputMovie ?rating)
  (sameDecade ?inputMovie ?outputMovie)
  (movieAdvisoryRating ?outputMovie ?rating)
  (sameDirectorOrGenre ?inputMovie ?outputMovie)
)

(<== (sameDirectorOrGenre ?movie1 ?movie2)
  (sameGenre ?movie1 ?movie2)
)

(<== (sameDirectorOrGenre ?movie1 ?movie2)
  (sameDirector ?movie1 ?movie2)
)

;;; same things

(<== (sameDecade ?movie1 ?movie2)
  (movieDecade ?movie1 ?decade)
  (movieDecade ?movie2 ?decade)
)

(<== (sameGenre ?movie1 ?movie2)
  (movieGenres ?movie1 ?genre)
  (movieGenres ?movie2 ?genre)
)

(<== (sameDirector ?movie1 ?movie2)
  (movieDirector ?movie1 ?director)
  (movieDirector ?movie2 ?director)
)

(<== (sameAdvisoryRating ?movie1 ?movie2)
  (movieAdvisoryRating ?movie1 ?rating)
  (movieAdvisoryRating ?movie2 ?rating)
)



(<== (sameActors ?movie1 ?movie2)
  (movieActors ?movie1 ?actor)
  (movieActors ?movie2 ?actor)
)


;;; (recommend ?movie ?criteria ?result)
;;; (elementOf ?c1 ?criteria)
;;; (unifies ?c1 fanFav)
;;; (fanFav ?movie ?movieList ?result)

;;; gets all of the bindings for fanFav
;;; (closedRetrieval ?result SetOf (fanFav ?movie ?movieList ?result))

;;; make sure that movie results are reasonable, be able to combine queries

;;; unifies ?something ?wholePredicate | this would allow us to compose things 

